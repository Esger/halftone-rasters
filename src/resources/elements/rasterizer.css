@property --x {
	syntax       : '<length-percentage>';
	initial-value: 50vw;
	inherits     : false
}

@property --y {
	syntax       : '<length-percentage>';
	initial-value: 50vh;
	inherits     : false
}

rasterizer {
	overflow             : hidden;
	display              : grid;
	grid-area            : 1/1;
	height               : 100%;
	background-blend-mode: multiply;
	--contrast           : 80;
	--size               : 2em;
	--grayscale          : grayscale(0);
	--sharpen            : blur(0);
	--filter             : var(--grayscale) contrast(var(--contrast)) var(--sharpen);
	filter               : var(--filter);

	&::before,
	&::after {
		position      : relative;
		content       : '';
		display       : block;
		grid-area     : 1/1;
		margin        : -50vh -50vw;
		mix-blend-mode: multiply;
	}

	&::after {
		background-image   : var(--map);
		background-repeat  : var(--mapRepeat);
		background-size    : var(--mapSize);
		background-position: var(--mapPosition);
	}

	&::before {
		background-image   : var(--pattern);
		background-repeat  : var(--patternRepeat);
		background-size    : var(--patternSize);
		background-position: var(--patternPosition);
		rotate             : var(--angle);
	}

	&.grayscale {
		--grayscale: grayscale(1);
	}
}

.map--linear::after {
	--mapRepeat  : no-repeat;
	--mapPosition: top;
	--mapSize    : cover;
	--map        : linear-gradient(90deg, #888 25%, #fff 75%);
	translate    : calc(var(--mouseX) - 50vw) calc(var(--mouseY) - 50vh);
}

.map--radial::after {
	--mapRepeat: no-repeat;
	--map      : radial-gradient(circle, #888, #fff);
	translate  : calc(var(--mouseX) - 50vw) calc(var(--mouseY) - 50vh);
}

.map--conical::after {
	--mapRepeat  : no-repeat;
	--mapPosition: var(--mapCenter);
	--map        : conic-gradient(#fff, #888, #fff);
	translate    : calc(var(--mouseX) - 50vw) calc(var(--mouseY) - 50vh);
}

.map--image {
	&::after {
		--mapRepeat  : no-repeat;
		--mapPosition: 50% 50%;
		--mapSize    : cover;
		--map        : var(--image), url(https://ashware.nl/assets/img/Esger.jpg);
		margin       : 0;
		filter       : blur(min(var(--size), .1vmin));
	}

	&.grayscale::after {
		filter: brightness(1.1) blur(min(var(--size), .1vmin));
	}
}

.raster--dotted {
	&::before {
		--patternRepeat  : space;
		--patternPosition: 0;
		--patternSize    : var(--size) var(--size);
		--pattern        : radial-gradient(closest-corner, #777, #fff);
	}

	&.map--image::before {
		--sz         : max(4px, var(--mouseX) / 10);
		--patternSize: var(--sz) var(--sz);
		--angle      : var(--angleMouseY);
	}

	&.sharpened {
		--sharpen: blur(2px) contrast(5);
	}

	&.raster--dotted-x::before {
		rotate: 45deg;
	}
}

.raster--lined {
	&::before {
		--patternRepeat  : repeat-y;
		--patternPosition: 0;
		--patternSize    : 100% calc(2 * var(--size));
		--pattern        : linear-gradient(#fff, #777, #fff);
	}

	&.map--image::before {
		--patternSize: 100% max(4px, var(--mouseX) / 10);
		--angle      : var(--angleMouseY);
	}

	&.sharpened {
		--sharpen: blur(.5px) contrast(2);
	}
}

.raster--radial {
	&::before {
		--patternRepeat  : no-repeat;
		--patternPosition: center;
		--patternSize    : 100%;
		--pattern        : repeating-radial-gradient(circle, #777, #fff, #777 var(--size));
	}

	&.map--image::before {
		translate: calc(var(--mouseX) - 50vw) calc(var(--mouseY) - 50vh);
		--angle  : 0;
	}

	&.sharpened {
		--sharpen: blur(2px) contrast(5);
	}
}

.raster--conical {
	&::before {
		--patternRepeat  : no-repeat;
		--patternPosition: center;
		--patternSize    : 100%;
		--pattern        : repeating-conic-gradient(#777 0, #fff var(--halfSliceAngle), #777 var(--sliceAngle));
	}

	&.map--image::before {
		translate: calc(var(--mouseX) - 50vw) calc(var(--mouseY) - 50vh);
		--angle  : 0;
	}

	&.sharpened {
		--sharpen: blur(2px) contrast(5);
	}
}
