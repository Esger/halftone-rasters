@property --x {
	syntax       : '<length-percentage>';
	initial-value: 50vw;
	inherits     : false
}

@property --y {
	syntax       : '<length-percentage>';
	initial-value: 50vh;
	inherits     : false
}

rasterizer {
	overflow             : hidden;
	display              : grid;
	grid-area            : 1/1;
	height               : 100%;
	background-blend-mode: multiply;
	--contrast           : 80;
	--mapSize            : 100%;
	--rasterSize         : 100%;
	--grayscale          : grayscale(0);
	--sharpen            : blur(0);
	--filter             : var(--grayscale) contrast(var(--contrast)) var(--sharpen);
	filter               : var(--filter);

	&::before,
	&::after {
		position      : relative;
		content       : '';
		display       : block;
		grid-area     : 1/1;
		margin        : -50vh -50vw;
		mix-blend-mode: multiply;
	}

	&::before {
		background-image   : var(--map);
		background-repeat  : var(--mapRepeat);
		background-size    : var(--mapSize);
		background-position: var(--mapPosition);
	}

	&::after {
		background-image   : var(--raster);
		background-repeat  : var(--rasterRepeat);
		background-size    : var(--rasterSize);
		background-position: var(--rasterPosition, 0);
	}

	&.grayscale {
		--grayscale: grayscale(1);
	}
}

.map--dotted {
	--mapRepeat  : repeat;
	--mapPosition: center;
	--map        : radial-gradient(closest-corner, #777, #fff);

	&::before {
		background-size: var(--mapSize) var(--mapSize);
	}
}

.map--lined {
	--mapRepeat  : repeat-x;
	--mapPosition: top;
	--map        : linear-gradient(90deg, #fff, #777, #fff);

	&::after {
		background-size: 100% calc(2 * var(--mapSize));
	}

	/* ::before {
		translate: calc(var(--mouseX) - 50vw) calc(var(--mouseY) - 50vh);
	} */
}

.map--radial {
	--mapRepeat: no-repeat;
	--map      : repeating-radial-gradient(circle, #777, #fff, #777 var(--mapSize));

	&::before {
		background-size: 100% 100%;
	}
}

.map--conical {
	--mapRepeat  : no-repeat;
	--mapPosition: var(--mapCenter);
	--map        : repeating-conic-gradient(#777 0, #fff var(--mapHalfSliceAngle), #777 var(--mapSliceAngle));

	&::before {
		background-size: 100% 100%;
	}
}

.map--image {
	&::before {
		--mapRepeat  : no-repeat;
		--mapPosition: 50% 50%;
		--mapSize    : cover;
		--map        : var(--image), url(https://ashware.nl/assets/img/Esger.jpg);
		margin       : 0;
		filter       : blur(min(var(--rasterSize), .1vmin));
	}

	&.grayscale::before {
		filter: brightness(1.1) blur(min(var(--rasterSize), .1vmin));
	}
}

.raster--dotted {
	--rasterRepeat  : repeat;
	--rasterPosition: center;
	--raster        : radial-gradient(closest-corner, #777, #fff);

	&::after {
		background-size: var(--rasterSize) var(--rasterSize);
		rotate         : var(--rasterAngle);
	}

	&.raster--interactive {
		--rasterAngle: var(--angleMouseY) !important;
	}

	&.sharpened {
		--sharpen: blur(2px) contrast(5);
	}
}

.raster--lined {
	--rasterRepeat  : repeat-y;
	--rasterPosition: 0;
	--raster        : linear-gradient(#fff, #777, #fff);

	&::after {
		background-size: 100% calc(2 * var(--rasterSize));
		rotate         : var(--rasterAngle);
	}

	&.raster--interactive {
		--rasterAngle: var(--angleMouseY) !important;
	}

	&.sharpened {
		--sharpen: blur(.5px) contrast(2);
	}
}

.raster--radial {
	--rasterRepeat  : no-repeat;
	--rasterPosition: center;
	--raster        : repeating-radial-gradient(circle, #777, #fff, #777 var(--rasterSize));

	&::after {
		background-size: 200% 200%;
	}

	&.raster--interactive::after {
		translate: calc(var(--mouseX) - 50vw) calc(var(--mouseY) - 50vh);
	}

	&.sharpened {
		--sharpen: blur(2px) contrast(5);
	}
}

.raster--conical {
	--rasterRepeat  : no-repeat;
	--rasterPosition: center;
	--raster        : repeating-conic-gradient(#777 0, #fff var(--rasterHalfSliceAngle), #777 var(--rasterSliceAngle));

	&::after {
		background-size: 200% 200%;
	}

	&.raster--interactive::after {
		translate: calc(var(--mouseX) - 50vw) calc(var(--mouseY) - 50vh);
	}

	&.sharpened {
		--sharpen: blur(2px) contrast(5);
	}
}
